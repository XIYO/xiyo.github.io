name: 🚀 Semantic Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  issues: write
  pull-requests: write
  deployments: write # Cloudflare deployment를 위해 필요

jobs:
  release:
    runs-on: ubuntu-latest
    # [skip ci] 또는 릴리즈 커밋인 경우 스킵
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, 'chore(release)')"

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 전체 히스토리 필요 (버전 계산용)
          persist-credentials: false
          submodules: recursive # 서브모듈 체크아웃 필요

      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'

      - name: 💾 Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright

      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 🎭 Install Playwright browsers
        run: pnpm exec playwright install --with-deps chromium

      - name: 🏗️ Build project
        run: pnpm build

      # 테스트는 일단 제외 (paraglide 런타임 이슈)
      # - name: 🔍 Run tests
      #   run: pnpm test

      - name: 🚀 Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Deploy to Cloudflare Workers
        if: success()
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env production
