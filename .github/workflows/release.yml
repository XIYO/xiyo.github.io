name: 🚀 Semantic Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    # [skip ci] 또는 릴리즈 커밋인 경우 스킵
    if: "!contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, 'chore(release)')"
    
    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 전체 히스토리 필요 (버전 계산용)
          persist-credentials: false
      
      - name: 📦 Setup pnpm
        uses: pnpm/action-setup@v4
      
      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'pnpm'
      
      - name: 📦 Install dependencies
        run: pnpm install --frozen-lockfile
      
      - name: 🔍 Run tests
        run: pnpm test
      
      - name: 🏗️ Build project
        run: pnpm build
      
      - name: 🚀 Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  # 릴리즈 후 배포 트리거
  trigger-deploy:
    needs: release
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: 🚀 Trigger deployment
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy.yml'
            })